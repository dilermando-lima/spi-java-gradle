subprojects {
    apply plugin: 'java'
    sourceCompatibility = '17'
    targetCompatibility = '17'
    sourceSets {
        main.java.srcDirs = ['src']
        main.resources.srcDirs = ['resources']
    }
}


project(':running-interface'){
    dependencies {
        implementation project(':interface-aggreement')
        implementation project(':implementation-1')
        implementation project(':implementation-2')
        implementation project(':implementation-3')
    }


    jar {
        doFirst {
            def serviceDir = file("$buildDir/META-INF/services")
            serviceDir.deleteDir()
            serviceDir.mkdirs()
            for(eachFile in configurations.compileClasspath) {
                zipTree(eachFile).matching{ include 'META-INF/services/*' }.each { f ->
                    new File(serviceDir, f.name) << f.getText("UTF-8") + "\n"
                }
            }
        }
        manifest {
            attributes "Main-Class": "Run"
        }
        from(configurations.compileClasspath.collect{ it.isDirectory() ? it : zipTree(it) }) {
            exclude 'META-INF/**'
        }
        from fileTree(buildDir).matching{ include 'META-INF/services/*' }
    }

}



project(':implementation-1'){ 
    dependencies {
        implementation project(':interface-aggreement')
    }
}

project(':implementation-2'){ 
    dependencies {
        implementation project(':interface-aggreement')
    }
}

project(':implementation-3'){ 
    dependencies {
        implementation project(':interface-aggreement')
    }
}

